public class LinkedList_4 {
    public int val;
    public LinkedList_4 node;

    // Constructor
    public LinkedList_4(int x) {
        this.val = x;
        this.node = null;
    }

    // Method to find the length of the linked list
    public static int getLength(LinkedList_4 head) {
        int count = 0;
        LinkedList_4 ptr = head;
        while (ptr != null) {
            count++;
            ptr = ptr.node;
        }
        return count;
    }

    // Method to print the linked list
    public static void printList(LinkedList_4 head) {
        LinkedList_4 ptr = head;
        while (ptr != null) {
            System.out.print(ptr.val + " ");
            ptr = ptr.node;
        }
        System.out.println();
    }

    // Main method
    public static void main(String[] args) {
        LinkedList_4 l1 = new LinkedList_4(2);
        LinkedList_4 l2 = new LinkedList_4(4);
        LinkedList_4 l3 = new LinkedList_4(6);
        LinkedList_4 l4 = new LinkedList_4(8);

        
        l1.node = l2;
        l2.node = l3;
        l3.node = l4;

        
        System.out.print("Linked List: ");
        printList(l1);

        
        int length = getLength(l1);
        System.out.println("Length of Linked List: " + length);
    }
}


//Time Complexity: O(n) — We traverse each node once to count the length.
//Space Complexity: O(1) — No extra space is used except a few pointers.
